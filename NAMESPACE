useDynLib(cesr)
importFrom(Rcpp, sourceCpp)

importFrom("grDevices", "col2rgb", "dev.off", "jpeg", "pdf", "png",
           "postscript", "svg", "tiff")
importFrom("graphics", "abline", "arrows", "axis", "barplot",
           "boxplot", "bxp", "image", "legend", "lines", "mtext",
           "par", "points", "rect", "segments", "title")
importFrom("stats", "aggregate", "as.formula", "coef", "deviance", "df.residual",
           "glm", "median", "na.omit", "predict", "pt", "qnorm", "quantile", 
           "quasibinomial", "quasipoisson", "relevel", "reshape", "rnorm", "vcov", "xtabs")
importFrom("utils", "adist", "capture.output", "data", "head", "write.table", "write.csv")
importFrom("data.table", "data.table", "setDT", "setkey", "setnames", "setorder",
           "setcolorder", "rbindlist", "uniqueN")
importFrom("reshape", "cast", "melt")
importFrom("mgcv", "gam")
importFrom("lme4", "glmer", "ranef", "VarCorr")

S3method(summary, ces)
S3method(plot, ces)
S3method(print, ces)

export(
  ces.table,
	extract.ch,
	extract.counts,
	extract.coverage,
	extract.data,
	extract.sites,
  get.euring,
	index,
	map.ces,
	mark.ces,
	plot.ces,
  plot_scheme,
	plot_trend,
  print.ces,
	readces,
	readBTO,
	select.data,
	setceslang,
	siteplot,
	sitereport,
	summary.ces,
  transient_plot,
	writeces,	
	load.boxplot,
	save.boxplot
)

## Not exported:
# plot_scheme
# ann.model.counts, ann.model.prod, annr.model.counts, annr.model.prod
# annt.model.counts, annt.model.prod, annsm.model.counts, annsm.model.prod 
# annc.model.counts, annc.model.prod 
# plot.ces.counts, plot.ces.data, plot.ces.glmfit, plot.ces.markfit, plot.ces.plots, plot.ces.ch
# summary.ces.ch, summary.ces.counts, summary.ces.glmfit, summary.ces.markfit, summary.ces.plots, summary.ces.sites, summary.ces.spp
# writeces.counts, writeces.glmfit, writeces.plots, writeces.sites, writeces.spp
# calc.offset, get.estimate, plglm, prsumglm, yrsum 


